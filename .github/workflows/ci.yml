name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux-amd64
          - windows-amd64
#          - darwin-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse Matrix Variables
        id: vars
        run: |
          PLAT="${{ matrix.platform }}"
          echo "GOOS=${PLAT%%-*}" >> $GITHUB_ENV
          echo "GOARCH=${PLAT##*-}" >> $GITHUB_ENV

      - name: Build with Docker (client)
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app \
            -e GOOS=${{ env.GOOS }} -e GOARCH=${{ env.GOARCH }} \
            golang:alpine sh -c "\
              cd client && \
              go mod tidy && \
              go build -ldflags='-s -w' -o ../build/sysmon_client-${{ env.GOOS }}-${{ env.GOARCH }}"

      - name: Build with Docker (server)
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app \
            -e GOOS=${{ env.GOOS }} -e GOARCH=${{ env.GOARCH }} \
            golang:alpine sh -c "\
              cd server && \
              go mod tidy && \
              go build -ldflags='-s -w' -o ../build/sysmon_server-${{ env.GOOS }}-${{ env.GOARCH }}"

      - name: Zip artifacts
        run: |
          mkdir -p release
          cd build
          zip -r9 ../release/sysmon_client-${{ env.GOOS }}-${{ env.GOARCH }}.zip sysmon_client-*
          zip -r9 ../release/sysmon_server-${{ env.GOOS }}-${{ env.GOARCH }}.zip sysmon_server-*
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sysmonbot-${{ matrix.platform }}
          path: release/*.zip
          retention-days: 1

  release:
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download all wheels
        uses: actions/download-artifact@v4

      - name: Generate release body
        run: |
          git log -1 --pretty=format:'- %h %s%n%b' > release_body.md
          echo "Release body written to release_body.md"

      - name: Release artifacts
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN  }}
          tag_name: latest
          name: latest
          draft: false
          prerelease: true
          make_latest: true
          body_path: release_body.md
          append_body: false
          files: |
            release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
